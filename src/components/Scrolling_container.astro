---
const { data } = Astro.props;
import { Icon } from "astro-icon/components";
import "../styles/global.css";
---

<section class="scrolling">
  <div class="scrolling-top">
    <div class="text">
      <div class="icon">
        <!-- <Icon name="financial-projections" /> -->
      </div>
      <div class="scrolling_text">
        <h2>Financial Projections</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
      </div>
    </div>
    <div class="buttons">
      <button class="scroll-arrow left" id="scroll-left">&larr;</button>
      <button class="scroll-arrow right" id="scroll-right">&rarr;</button>
    </div>
  </div>

  <ul role="list" class="full-width">
    {
      data.map((card) => (
        <li>
          <div class="icon-card">
            <img src={card.image} alt="" />
          </div>
          <h6>{card.title}</h6>
          <p>{card.body}</p>
        </li>
      ))
    }
  </ul>
</section>

<style>
  @media (width < 900px) {
    .scrolling_text p {
      width: 280px;
      margin-bottom: 3rem;
    }
  }
  .scrolling_text {
    h2 {
      font-size: var(--step-3);
      font-weight: 700;
    }
    p {
      font-size: var(--step--1);
      font-weight: 300;
      line-height: 1.5;
      margin-top: 0.8rem;
    }
  }
  @layer components {
    .scrolling {
      padding: 5rem;
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: [full-start] 1fr [content] minmax(0, 1200px) 1fr [full-end];
      --gap: clamp(1rem, 6vw, 3rem);
      row-gap: 4rem;
      background: var(--secondary-color-02);
      color: var();

      > * {
        grid-column: 2;
      }

      > ul {
        scroll-snap-type: x mandatory;
        grid-column: 1 / -1;
        padding-inline: max(1rem, 50% - var(--content) / 10px);
        padding-block-end: 1rem;

        li {
          scroll-snap-align: center;
          &:first-child {
            margin-left: calc(50% - var(--content) / 2);
          }
          &:last-child {
            margin-right: calc(50% - var(--content) / 2);
          }
        }
      }

      .scrolling-top {
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
        .text {
          max-width: 50%;
          .icon {
            width: 100px;
          }
        }
        .buttons {
          display: flex;
          gap: 20px;
        }
      }
    }
    h2 {
      font-size: var(--step-3);
    }
    .scroll-arrow {
      background: var(--color-primary3);
      color: var(--color-secondary2);
      padding: 11px 14px;
      border-radius: 100px;
      cursor: pointer;
      align-items: center;
      justify-content: center;
      &:last-child {
        background-color: var(--color-primary1);
        color: var(--color-primary3);
      }
    }

    .full-width {
      display: flex;
      gap: 1rem;
      overflow-x: auto;
      list-style: none;
      margin-top: 0;

      li {
        flex-basis: min(400px, 90%);
        flex-shrink: 0;
        background: #ebebeb;
        color: #595566;
        border-radius: 8px;
        font-size: 1rem;
        padding: 2.75rem 2.1875rem;
        align-self: start;
        display: grid;
        gap: 10px;
        h6 {
          font-weight: 700;
          font-size: 1.5625rem;
        }
      }
      .icon-card {
        width: 40px;
        margin-bottom: 14px;
      }
    }
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const container = document.querySelector(".scrolling ul");
    const leftButton = document.getElementById("scroll-left");
    const rightButton = document.getElementById("scroll-right");

    const cardWidth = 400; // Width of each card
    const scrollAmount = cardWidth + 16; // cardWidth + gap between cards

    leftButton.addEventListener("click", () => {
      container.scrollBy({ left: -scrollAmount, behavior: "smooth" });
    });

    rightButton.addEventListener("click", () => {
      container.scrollBy({ left: scrollAmount, behavior: "smooth" });
    });
  });
</script>
